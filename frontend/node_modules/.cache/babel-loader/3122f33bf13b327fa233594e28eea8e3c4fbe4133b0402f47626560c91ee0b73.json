{"ast":null,"code":"var _jsxFileName = \"/Users/brijeshpatel/Desktop/JobTask/frontend/myapp/src/components/SalesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// Import the necessary Chart.js modules\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary modules\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SalesChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/sales');\n      const {\n        data\n      } = response;\n      const labels = data.map(item => item.date); // Assuming data is an array of objects with `date` and `totalSales`\n      const salesData = data.map(item => item.totalSales);\n      setChartData({\n        labels,\n        datasets: [{\n          label: 'Total Sales Over Time',\n          data: salesData,\n          backgroundColor: 'rgba(75,192,192,0.2)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderWidth: 1\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Sales Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(SalesChart, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SalesChart","_s","chartData","setChartData","fetchData","response","get","data","labels","map","item","date","salesData","totalSales","datasets","label","backgroundColor","borderColor","borderWidth","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brijeshpatel/Desktop/JobTask/frontend/myapp/src/components/SalesChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// Import the necessary Chart.js modules\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Register the necessary modules\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst SalesChart = () => {\n    const [chartData, setChartData] = useState({});\n    \n    const fetchData = async () => {\n        try {\n            const response = await axios.get('http://localhost:5001/api/sales');\n            const { data } = response;\n\n            const labels = data.map(item => item.date); // Assuming data is an array of objects with `date` and `totalSales`\n            const salesData = data.map(item => item.totalSales);\n\n            setChartData({\n                labels,\n                datasets: [\n                    {\n                        label: 'Total Sales Over Time',\n                        data: salesData,\n                        backgroundColor: 'rgba(75,192,192,0.2)',\n                        borderColor: 'rgba(75,192,192,1)',\n                        borderWidth: 1,\n                    },\n                ],\n            });\n        } catch (error) {\n            console.error(\"Error fetching data\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h2>Total Sales Over Time</h2>\n            <Line data={chartData} />\n        </div>\n    );\n};\n\nexport default SalesChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,iCAAiC,CAAC;MACnE,MAAM;QAAEC;MAAK,CAAC,GAAGF,QAAQ;MAEzB,MAAMG,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5C,MAAMC,SAAS,GAAGL,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,UAAU,CAAC;MAEnDV,YAAY,CAAC;QACTK,MAAM;QACNM,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,uBAAuB;UAC9BR,IAAI,EAAEK,SAAS;UACfI,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE,oBAAoB;UACjCC,WAAW,EAAE;QACjB,CAAC;MAET,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACZoB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B3B,OAAA,CAACZ,IAAI;MAACqB,IAAI,EAAEL;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}