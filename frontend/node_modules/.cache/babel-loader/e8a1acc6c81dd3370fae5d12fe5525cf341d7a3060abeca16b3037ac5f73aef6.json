{"ast":null,"code":"var _jsxFileName = \"/Users/brijeshpatel/Desktop/JobTask/frontend/myapp/src/components/SalesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getTotalSalesOverTime } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesChart = ({\n  interval\n}) => {\n  _s();\n  const [salesData, setSalesData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getTotalSalesOverTime(interval);\n      setSalesData(data);\n    };\n    fetchData();\n  }, [interval]);\n  const chartData = {\n    labels: salesData.map(item => item._id),\n    datasets: [{\n      label: 'Total Sales',\n      data: salesData.map(item => item.totalSales),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n_s(SalesChart, \"ivuxsniXM1EI1p/SbwyOVTwtldo=\");\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","getTotalSalesOverTime","jsxDEV","_jsxDEV","SalesChart","interval","_s","salesData","setSalesData","fetchData","data","chartData","labels","map","item","_id","datasets","label","totalSales","fill","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brijeshpatel/Desktop/JobTask/frontend/myapp/src/components/SalesChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getTotalSalesOverTime } from '../services/apiService';\n\nconst SalesChart = ({ interval }) => {\n    const [salesData, setSalesData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await getTotalSalesOverTime(interval);\n            setSalesData(data);\n        };\n\n        fetchData();\n    }, [interval]);\n\n    const chartData = {\n        labels: salesData.map((item) => item._id),\n        datasets: [\n            {\n                label: 'Total Sales',\n                data: salesData.map((item) => item.totalSales),\n                fill: false,\n                borderColor: 'rgb(75, 192, 192)',\n            },\n        ],\n    };\n\n    return <Line data={chartData} />;\n};\n\nexport default SalesChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,qBAAqB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAG,MAAMT,qBAAqB,CAACI,QAAQ,CAAC;MAClDG,YAAY,CAACE,IAAI,CAAC;IACtB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMM,SAAS,GAAG;IACdC,MAAM,EAAEL,SAAS,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC;IACzCC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,aAAa;MACpBP,IAAI,EAAEH,SAAS,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,UAAU,CAAC;MAC9CC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,oBAAOjB,OAAA,CAACH,IAAI;IAACU,IAAI,EAAEC;EAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAAClB,EAAA,CAzBIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}