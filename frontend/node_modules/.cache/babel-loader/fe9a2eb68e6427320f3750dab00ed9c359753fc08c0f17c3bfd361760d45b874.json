{"ast":null,"code":"var _jsxFileName = \"/Users/brijeshpatel/Desktop/RapidQuest/frontend/myapp/src/components/RepeatCustomersChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst RepeatCustomersChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Number of Repeat Customers',\n      data: [],\n      backgroundColor: 'rgba(54,162,235,0.2)',\n      borderColor: 'rgba(54,162,235,1)',\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    // Fetch data from your backend API\n    axios.get('http://localhost:5000/api/customers/repeat').then(response => {\n      const data = response.data; // Expecting data in the format { day: { labels: [], values: [] }, month: { labels: [], values: [] }, ... }\n\n      // Prepare chart data\n      const datasets = Object.keys(data).map(timeFrame => ({\n        label: `${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)}ly Repeat Customers`,\n        data: data[timeFrame].values,\n        backgroundColor: 'rgba(54,162,235,0.2)',\n        borderColor: 'rgba(54,162,235,1)',\n        borderWidth: 1\n      }));\n      setChartData({\n        labels: data.month.labels,\n        // Assuming monthly labels to be common for the x-axis\n        datasets\n      });\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Number of Repeat Customers Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Number of Repeat Customers Over Time'\n          },\n          legend: {\n            display: true\n          },\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return `Repeat Customers: ${tooltipItem.raw}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Number of Repeat Customers'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(RepeatCustomersChart, \"MG1ZEF3TqAUIRtf/Cy4KaUFrljI=\");\n_c = RepeatCustomersChart;\nexport default RepeatCustomersChart;\nvar _c;\n$RefreshReg$(_c, \"RepeatCustomersChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","RepeatCustomersChart","_s","chartData","setChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","get","then","response","Object","keys","map","timeFrame","charAt","toUpperCase","slice","values","month","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","title","display","text","legend","tooltip","callbacks","tooltipItem","raw","scales","x","y","_c","$RefreshReg$"],"sources":["/Users/brijeshpatel/Desktop/RapidQuest/frontend/myapp/src/components/RepeatCustomersChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst RepeatCustomersChart = () => {\n    const [chartData, setChartData] = useState({\n        labels: [],\n        datasets: [\n            {\n                label: 'Number of Repeat Customers',\n                data: [],\n                backgroundColor: 'rgba(54,162,235,0.2)',\n                borderColor: 'rgba(54,162,235,1)',\n                borderWidth: 1,\n            },\n        ],\n    });\n\n    useEffect(() => {\n        // Fetch data from your backend API\n        axios.get('http://localhost:5000/api/customers/repeat')\n            .then((response) => {\n                const data = response.data;  // Expecting data in the format { day: { labels: [], values: [] }, month: { labels: [], values: [] }, ... }\n\n                // Prepare chart data\n                const datasets = Object.keys(data).map(timeFrame => ({\n                    label: `${timeFrame.charAt(0).toUpperCase() + timeFrame.slice(1)}ly Repeat Customers`,\n                    data: data[timeFrame].values,\n                    backgroundColor: 'rgba(54,162,235,0.2)',\n                    borderColor: 'rgba(54,162,235,1)',\n                    borderWidth: 1,\n                }));\n\n                setChartData({\n                    labels: data.month.labels,  // Assuming monthly labels to be common for the x-axis\n                    datasets\n                });\n            })\n            .catch((error) => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2>Number of Repeat Customers Over Time</h2>\n            <Line\n                data={chartData}\n                options={{\n                    responsive: true,\n                    plugins: {\n                        title: {\n                            display: true,\n                            text: 'Number of Repeat Customers Over Time',\n                        },\n                        legend: {\n                            display: true,\n                        },\n                        tooltip: {\n                            callbacks: {\n                                label: function(tooltipItem) {\n                                    return `Repeat Customers: ${tooltipItem.raw}`;\n                                },\n                            },\n                        },\n                    },\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Time',\n                            },\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Number of Repeat Customers',\n                            },\n                        },\n                    },\n                }}\n            />\n        </div>\n    );\n};\n\nexport default RepeatCustomersChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IACvCmB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,4BAA4B;MACnCC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,oBAAoB;MACjCC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACZ;IACAG,KAAK,CAACwB,GAAG,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MAChB,MAAMN,IAAI,GAAGM,QAAQ,CAACN,IAAI,CAAC,CAAE;;MAE7B;MACA,MAAMF,QAAQ,GAAGS,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,GAAG,CAACC,SAAS,KAAK;QACjDX,KAAK,EAAE,GAAGW,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,qBAAqB;QACrFb,IAAI,EAAEA,IAAI,CAACU,SAAS,CAAC,CAACI,MAAM;QAC5Bb,eAAe,EAAE,sBAAsB;QACvCC,WAAW,EAAE,oBAAoB;QACjCC,WAAW,EAAE;MACjB,CAAC,CAAC,CAAC;MAEHP,YAAY,CAAC;QACTC,MAAM,EAAEG,IAAI,CAACe,KAAK,CAAClB,MAAM;QAAG;QAC5BC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ChC,OAAA,CAACZ,IAAI;MACDqB,IAAI,EAAEL,SAAU;MAChB6B,OAAO,EAAE;QACLC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACLC,KAAK,EAAE;YACHC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACV,CAAC;UACDC,MAAM,EAAE;YACJF,OAAO,EAAE;UACb,CAAC;UACDG,OAAO,EAAE;YACLC,SAAS,EAAE;cACPjC,KAAK,EAAE,SAAAA,CAASkC,WAAW,EAAE;gBACzB,OAAO,qBAAqBA,WAAW,CAACC,GAAG,EAAE;cACjD;YACJ;UACJ;QACJ,CAAC;QACDC,MAAM,EAAE;UACJC,CAAC,EAAE;YACCT,KAAK,EAAE;cACHC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACV;UACJ,CAAC;UACDQ,CAAC,EAAE;YACCV,KAAK,EAAE;cACHC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACV;UACJ;QACJ;MACJ;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAhFID,oBAAoB;AAAA6C,EAAA,GAApB7C,oBAAoB;AAkF1B,eAAeA,oBAAoB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}